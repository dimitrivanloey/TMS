# Generated by Django 3.0.5 on 2021-06-16 16:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arkle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Denman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Frankel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kauto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Winx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True)),
                ('date_added', models.DateField(auto_now=True)),
                ('status', models.CharField(choices=[('Not In Service', 'Not In Service'), ('Lost', 'Lost'), ('In Repair', 'In Repair'), ('In Service', 'In Service')], default='In Service', max_length=15)),
                ('start_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Other_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default='In Service', max_length=41)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default='Kempton Park', max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('other', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Other')),
            ],
            options={
                'verbose_name_plural': 'other entries',
            },
        ),
        migrations.CreateModel(
            name='Kauto_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default='In Service', max_length=41)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default='Kempton Park', max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('kauto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Kauto')),
            ],
            options={
                'verbose_name_plural': 'kauto entries',
            },
        ),
        migrations.CreateModel(
            name='Frankel_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default='In Service', max_length=41)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default='Kempton Park', max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('frankel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Frankel')),
            ],
            options={
                'verbose_name_plural': 'frankel entries',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], max_length=41, null=True)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('winx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Winx')),
            ],
            options={
                'verbose_name_plural': 'entries',
            },
        ),
        migrations.CreateModel(
            name='Enable_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default='In Service', max_length=41)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default='Kempton Park', max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('enable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Enable')),
            ],
            options={
                'verbose_name_plural': 'enable entries',
            },
        ),
        migrations.CreateModel(
            name='Denman_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default='In Service', max_length=41)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default='Kempton Park', max_length=18, null=True)),
                ('comments', models.TextField(blank=True)),
                ('denman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Denman')),
            ],
            options={
                'verbose_name_plural': 'denman entries',
            },
        ),
        migrations.CreateModel(
            name='Arkle_Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('In Refurb - Send for mechanical repair', 'In Refurb - Send for mechanical repair'), ('Out of Service and Returned for Refurb', 'Out of Service and returned for Refurb'), ('On Course - Test: No Red', 'On Course - Test: No Red'), ('On Course - Racing: Good Performance', 'On course - racing: Good Performance'), ('On Course - Racing: Not to course', 'On course - racing: Not to course'), ('On Course - Test: No Orange', 'On course - Test: No Orange'), ('In Refurb - No reply from modem', 'In Refurb - No reply from modem'), ('On Course - Test: Broken Connector', 'On course - Test: Broken Connector'), ('In Refurb - Broken beyond repair', 'In Refurb - Broken beyond repair'), ('On Course - Test: No Solid White', 'On course - Test: No Solid White'), ('On Course - Racing: Stuck on track', 'On course - racing: Stuck on track'), ('In Refurb - Fixed and returning to course', 'In Refurb - Fixed and returning to course'), ('On Course - Test: Broken Switch', 'On course - Test: Broken Switch')], default=None, max_length=41)),
                ('failure_codes', models.CharField(blank=True, choices=[('USB Connector Broken', 'USB Connector Broken'), ('Antenna Broken', 'Antenna Broken'), ('Battery Failure', 'Battery Failure'), ('Case Damaged', 'Case Damaged'), ('Switch Broken', 'Switch Broken'), ('Clear Water Ingress Damage', 'Clear Water Ingress Damage'), ('Lights in Grey State', 'Lights in Grey State'), ('Unknown', 'Unknown')], default=None, max_length=30, null=True)),
                ('venue', models.CharField(blank=True, choices=[('Haydock', 'Haydock Park'), ('Huntingdon', 'Huntingdon'), ('Dundalk', 'Dundalk'), ('Aintree', 'Aintree'), ('Pontefract', 'Pontefract'), ('Beverly', 'Beverly'), ('Kelso', 'Kelso'), ('York', 'York'), ('Thirsk', 'Thirsk'), ('Redcar', 'Redcar'), ('Sandown Park', 'Sandown Park'), ('Catterick Bridge', 'Catterick Bridge'), ('Ludlow', 'Ludlow'), ('Taunton', 'Taunton'), ('Epsom Downs', 'Epsom Downs'), ('Cartmel', 'Cartmel'), ('Nottingham', 'Nottingham'), ('Exeter', 'Exeter'), ('Wetherby', 'Wetherby'), ('Hamilton', 'Hamilton Park'), ('Market Rasen', 'Market Rasen'), ('Newbury', 'Newbury'), ('Warwick', 'Warwick'), ('Newmarket', 'Newmarket'), ('Perth', 'Perth'), ('Musselburgh', 'Musselburgh'), ('Ayr', 'Ayr'), ('Stratford-On-Avon', 'Stratford-On-Avon'), ('Chester', 'Chester'), ('Leicester', 'Leicester'), ('Cheltenham', 'Cheltenham'), ('Wincanton', 'Wincanton'), ('Kempton Park', 'Kempton Park'), ('Carlisle', 'Carlisle'), ('Salisbury', 'Salisbury'), ('Goodwood', 'Goodwood')], default=None, max_length=18, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('arkle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='unit_logs.Arkle')),
            ],
            options={
                'verbose_name_plural': 'arkle entries',
            },
        ),
    ]
